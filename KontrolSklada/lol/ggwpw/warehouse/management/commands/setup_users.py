from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from warehouse.models import PickupPoint


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–∏—Å—Ç–µ–º—ã'

    def handle(self, *args, **options):
        self.stdout.write('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–∏—Å—Ç–µ–º—ã...')
        
        # –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin
        admin_user, created = User.objects.get_or_create(
            username='admin',
            defaults={
                'email': 'admin@example.com',
                'is_superuser': True,
                'is_staff': True
            }
        )
        admin_user.set_password('admin123')
        admin_user.is_superuser = True
        admin_user.is_staff = True
        admin_user.save()
        
        status = '—Å–æ–∑–¥–∞–Ω' if created else '–æ–±–Ω–æ–≤–ª–µ–Ω'
        self.stdout.write(f'‚úÖ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin {status}')

        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ü–í–ó
        pvz_users = [
            ('pvz_user', 'pvz@example.com'),
            ('pvz_user2', 'pvz2@example.com')
        ]
        
        for username, email in pvz_users:
            user, created = User.objects.get_or_create(
                username=username,
                defaults={'email': email}
            )
            user.set_password('pvz123')
            user.save()
            
            status = '—Å–æ–∑–¥–∞–Ω' if created else '–æ–±–Ω–æ–≤–ª–µ–Ω'
            self.stdout.write(f'‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} {status}')

        # –°–æ–∑–¥–∞–µ–º –ø—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏
        pvz_data = [
            ('–ü–í–ó –¶–µ–Ω—Ç—Ä', '—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è, 1', 'pvz_user'),
            ('–ü–í–ó –°–µ–≤–µ—Ä', '—É–ª. –°–µ–≤–µ—Ä–Ω–∞—è, 15', 'pvz_user2')
        ]
        
        for name, address, manager_username in pvz_data:
            manager = User.objects.get(username=manager_username)
            pvz, created = PickupPoint.objects.get_or_create(
                name=name,
                defaults={
                    'address': address,
                    'manager': manager
                }
            )
            if not created:
                pvz.manager = manager
                pvz.address = address
                pvz.save()
            
            status = '—Å–æ–∑–¥–∞–Ω' if created else '–æ–±–Ω–æ–≤–ª–µ–Ω'
            self.stdout.write(f'‚úÖ {name} {status} (–º–µ–Ω–µ–¥–∂–µ—Ä: {manager_username})')

        self.stdout.write()
        self.stdout.write(self.style.SUCCESS('üéâ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –ü–í–ó –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!'))
        self.stdout.write()
        self.stdout.write('üë§ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:')
        self.stdout.write('   admin / admin123 (—Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)')
        self.stdout.write('   pvz_user / pvz123 (–ü–í–ó –¶–µ–Ω—Ç—Ä)')
        self.stdout.write('   pvz_user2 / pvz123 (–ü–í–ó –°–µ–≤–µ—Ä)')